<?php
/**
 * @package Get Client IP Shortcode
 *
 * Plugin Name: Get Client IP Shortcode
 * Plugin URI: https://github.com/psmagicman/ctlt_wp_get_client_ip
 * Description: Get Client's IP - simple as that.
 * Version: 1.0
 * Author: Michael Ha, Devindra Payment, Julien Law, CTLT
 * Author URI: http://ctlt.ubc.ca/
 */
class IP_Shortcode {
    static $add_script;
    
    /**
     * Initializes the class, and begins the process of replacing the shortcodes.
     */
    static function init() {
        // create the handle tag for the wordpress shortcode
        add_shortcode('get_ip', array(__CLASS__, 'get_address'));
        
        // Add these functions to register and print the javascript.
        add_action('init', array(__CLASS__, 'register_script'));
        add_action('wp_footer', array(__CLASS__, 'print_script'));
    }
    
    /**
     * Get the client's IP address.
     * Or, if WP Super Cache is active, then return a .ip-shortcode element, and set the add_script flag.
     * The .ip-shortcode element will later be replaced via javascript.
     */
    static function get_address() {
        if (is_plugin_active('wp-super-cache')) {
            // Confirms that the shortcode is being used, and thus the javascript file needs to be added.
            self::$add_script = true;
            
            // Javascript will replace the span tags with the client ip address.
            return '<span class="ip-shortcode"></span>';
        } else {
            return $_SERVER['REMOTE_ADDR'];
        }
    }
    
    /**
     * Register handles for any scripts used by this class.
     * The handles are then used to reference the script, later in the code.
     */
    static function register_script() {
        wp_register_script('get-client-ip-javascript', plugins_url('get-client-ip-javascript.js', __FILE__), array('jquery'), '1.0', true);
    }
    
    /**
     * If the add_script flag has been set, then print any scripts used by this class onto the page.
     */
    static function print_script() {
        if ( !self::$add_script ) {
            // If the add_script flag has not been set - in get_address() - then don't add the scripts.
            return;
        }
        
        // Adds this javascript file to the page.
        wp_enqueue_script('get-client-ip-javascript');
        // Transfers the ip address generated by the PHP script to the javascript function in get-client-ip-javascript.js
        // It does this by replacing the 'ipaddr' variable in the 'get-client-ip-javascript' script, with the client's IP address.
        wp_localize_script('get-client-ip-javascript', 'ipaddr', $_SERVER['REMOTE_ADDR']);
    }
}

// Initialize and start the IP shortcode replacement.
IP_Shortcode::init(true);
?>
